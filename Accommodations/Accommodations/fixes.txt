
======================== БАГИ/ОШИБКИ В ЛОГИКЕ ========================

AccommodationsProcessor

1. Строки, где происходил парсинг даты: команды book(стр. 75, 76) и search(стр. 149, 150).
Добавил новую функцию TryParseDate(строка 164), которая выбрасывает FormatException, если не может спарсить строку.
Также добавил обработку этого исключения на 36 строке.

2. Вынес парсинг GUID'a также в отдельную функцию(строка 175), из которой в случае неудачи выбрасываю понятную ошибку (В командах cancel и find, строки 106 и 135).

3. Добавил проверку длины списка команд (строка 115), при вызове undo. Если список пуст - выбрасываем исключение. Также добавил его обработку на 41 строке.

4. 70 строка - исправил вывод ошибки при неудачном парсинге валюты. Заменил Parse на TryParse.

5. Добавил проверку даты заезда при создании нового бронирования (строка 79).

6. Команды find и search не логировались, как выполненные. Реализовал добавление в список выполненных команд. (Строки 139 и 154).


FindBookingByIdCommand

1. Строка 12. Исправил вывод информации о категории при поиске брони по ID


BookingService

1. В рассчёте штрафа за отмену бронирования изменил логику так, чтобы считались дни без учета часов и программа не падала, если отменить бронирование, которое назначено
на следующий день. Также поменял дни местами, чтобы штраф за отмену был положительным числом. (133 строка)

2. Изменил расчет стоимости брони в зависимости от выбранной валюты => 161 строка добавил деление на currencyRate, 162 строка убрал умножение на currencyRate,
т.к. считаем цену относительно выбранной валюты при бронировании.

3. В расчёте штрафа за отмену брони изменил логику рассчёта суммы штрафа относительно той валюты, которая указана в бронировании. (строка 136).

4. Поиск по фильтрам(строка 113) изменил условие в запросе, чтобы дата выезда учитывалась включительно.

5. Из описания функционала следует, что нельзя создать бронирование с датой заезда и выезда в один день, поправил проверку на 27 строке, чуть поменял сообщение в ошибке.

6. Добавил проверку в поиске по фильтрам на то, что дата выезда не раньше или не совпадает с датой заезда. (строка 104).


======================== ПРОЧИЕ НЕДОЧЕТЫ(?) ========================

BookingService

1. Метод CalculateDiscount (строка 91) всегда возвращает одно и то же число для скидки. Убрал неиспользуемый параметр userId.
Также поступил в методе CalculateBookingCost (строка 158).


Классы CancelBookingCommand, FindBookingByIdCommand и SearchBookingsCommand

1. По умолчанию в реализации метода Undo делают вывод на консоль с сообщением, что данные классы не поддерживают этот метод. Сделал вместо этого выброс NotSupportedException.
Добавил обработку этого исключения в AccommodationsProcessor (строка 46).

Изначально это нарушение SOLID, касаемо разделения интерфейсов.
Альтернатива для выброса NotSupportedException - расширить интерфейс ICommand, например, ICommandWithUndo.
Те операции, которые предполагают отмену - реализуют ICommandWithUndo, прочие - ICommand.

Затем в AccommodationProcessor (строка 120) можно было бы добавить проверку на подобие:

    if (_executedCommands[s_commandIndex] is ICommandWithUndo commandWithUndo)

и только затем производить логику отмены, если получаем true.


CurrencyDto

1. Вряд ли правильно передавать DTO в виде перечисления. Альтернатива - заменить на record с полем <string CurrencyName>.


======================== ССЫЛКА НА GOOGLEDOC С РЕЗУЛЬТАТАМИ РАБОТЫ ПОИСКА ПО ФИЛЬТРАМ ========================

https://drive.google.com/drive/folders/10Z8sqyck1oWEDVQv_0gMbNUfu5jmCW_A?usp=drive_link
